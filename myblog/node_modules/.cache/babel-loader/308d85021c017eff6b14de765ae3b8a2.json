{"ast":null,"code":"var _jsxFileName = \"/home/neema/docker-crash-course/myblog/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState } from 'react'\n// // import './App.css';\n// function App() {\n//   const [blogs, setBlogs] = useState([])\n//   useEffect(() => {\n//     fetch('http://localhost:4000')\n//       .then(res => res.json())\n//       .then(data => setBlogs(data))\n//   }, [])\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>all blogs</h1>\n//         {blogs && blogs.map(blog => (\n//           <div key={blog.id}>{blog.title}</div>\n//         ))}\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:4000').then(res => {\n      if (!res.ok) {\n        throw new Error(`Error: ${res.statusText}`);\n      }\n\n      return res.json();\n    }).then(data => {\n      setBlogs(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this), blogs && blogs.length > 0 ? blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blog.title\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)) : !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blogs available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tdNJmSjY/kFqj7ChzV/5mp6bsYQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/neema/docker-crash-course/myblog/src/App.js"],"names":["useEffect","useState","App","blogs","setBlogs","loading","setLoading","error","setError","fetch","then","res","ok","Error","statusText","json","data","catch","err","message","color","length","map","blog","title","id"],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAW,UAASF,GAAG,CAACG,UAAW,EAAnC,CAAN;AACD;;AACD,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KANH,EAOGL,IAPH,CAOSM,IAAD,IAAU;AACdZ,MAAAA,QAAQ,CAACY,IAAD,CAAR;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVH,EAWGW,KAXH,CAWUC,GAAD,IAAS;AACdV,MAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHd,EAIGE,KAAK,iBAAI;AAAG,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA,8BAAoCb,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ,EAMGJ,KAAK,IAAIA,KAAK,CAACkB,MAAN,GAAe,CAAxB,GACClB,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBACR;AAAA,kBAAoBA,IAAI,CAACC;AAAzB,SAAUD,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,cADF,CADD,GAKC,CAACpB,OAAD,IAAY,CAACE,KAAb,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAX1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzCQL,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["// import { useEffect, useState } from 'react'\n// // import './App.css';\n\n\n// function App() {\n//   const [blogs, setBlogs] = useState([])\n//   useEffect(() => {\n//     fetch('http://localhost:4000')\n//       .then(res => res.json())\n//       .then(data => setBlogs(data))\n//   }, [])\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>all blogs</h1>\n//         {blogs && blogs.map(blog => (\n//           <div key={blog.id}>{blog.title}</div>\n//         ))}\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:4000')\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(`Error: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setBlogs(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>All Blogs</h1>\n\n        {loading && <p>Loading...</p>}\n        {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n\n        {blogs && blogs.length > 0 ? (\n          blogs.map((blog) => (\n            <div key={blog.id}>{blog.title}</div>\n          ))\n        ) : (\n          !loading && !error && <p>No blogs available.</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}